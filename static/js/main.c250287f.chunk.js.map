{"version":3,"sources":["components/Editor.js","hooks/useLocalStorage.js","components/App.js","index.js"],"names":["Editor","props","displayName","value","language","onChange","className","onBeforeChange","editor","data","options","lineWrapping","lint","mode","theme","lineNumbers","useLocalStorage","key","initialValue","preFixedKey","useState","jsonValue","localStorage","getItem","JSON","parse","setValue","useEffect","setItem","stringify","App","html","setHtml","css","setCss","js","setJs","srcDoc","setSrcDoc","timeout","setTimeout","clearTimeout","title","sandbox","frameBorder","width","height","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8OASe,SAASA,EAAOC,GAC3B,IACIC,EAIAD,EAJAC,YACAC,EAGAF,EAHAE,MACAC,EAEAH,EAFAG,SACAC,EACAJ,EADAI,SAKJ,OACI,sBAAKC,UAAY,mBAAjB,UACI,qBAAKA,UAAY,eAAjB,SACKJ,IAGL,cAAC,aAAD,CACIK,eAVZ,SAAsBC,EAAOC,EAAKN,GAC9BE,EAASF,IAUDA,MAASA,EACTG,UAAY,sBACZI,QAAW,CACPC,cAAc,EACdC,MAAM,EACNC,KAAMT,EACNU,MAAO,WACPC,aAAa,QC/BlB,SAASC,EAAgBC,EAAIC,GACxC,IAAMC,EAFK,eAEkBF,EAC7B,EAA0BG,oBAAS,WAC/B,IAAMC,EAAYC,aAAaC,QAAQJ,GACvC,OAAgB,MAAbE,EAA0BG,KAAKC,MAAMJ,GAEb,oBAAjBH,EACCA,IAEAA,KAPf,mBAAOf,EAAP,KAAauB,EAAb,KAcA,OAHAC,qBAAU,WACNL,aAAaM,QAAQT,EAAYK,KAAKK,UAAU1B,MAClD,CAACgB,EAAYhB,IACR,CAACA,EAAMuB,G,iBCkEHI,MA/Ef,WACE,MAAuBR,EAAa,OAAO,IAA3C,mBAAOS,EAAP,KAAYC,EAAZ,KACA,EAAqBV,EAAa,MAAM,IAAxC,mBAAOW,EAAP,KAAWC,EAAX,KACA,EAAmBZ,EAAa,KAAK,IAArC,mBAAOa,EAAP,KAAUC,EAAV,KACA,EAA4BhB,mBAAS,IAArC,mBAAOiB,EAAP,KAAcC,EAAd,KAkBA,OAjBAX,qBAAU,WACR,IAAMY,EAAUC,YAAW,WACzBF,EAAU,iCAAD,OAECP,EAFD,mCAGEE,EAHF,qCAIGE,EAJH,wCAOT,KACF,OAAO,kBAAMM,aAAaF,MAC1B,CAACR,EAAKE,EAAIE,IAOZ,mCAAE,sBAAK7B,UAAY,aAAjB,UACE,qBAAKA,UAAY,iBAAjB,SAGA,eAAC,IAAD,WACA,eAAC,IAAD,WACE,cAAC,IAAD,yBACA,cAAC,IAAD,wBACA,cAAC,IAAD,0BAGF,cAAC,IAAD,UACA,cAACN,EAAD,CACII,SAAW,MACXF,YAAc,OACdC,MAAS4B,EACT1B,SAAY2B,MAGhB,cAAC,IAAD,UACA,cAAChC,EAAD,CACII,SAAW,MACXF,YAAc,MACdC,MAAS8B,EACT5B,SAAY6B,MAGhB,cAAC,IAAD,UACA,cAAClC,EAAD,CACII,SAAW,aACXF,YAAc,KACdC,MAASgC,EACT9B,SAAY+B,WAQhB,sBAAK9B,UAAY,QAAjB,UACE,6CACA,wBACE+B,OAAUA,EACVK,MAAQ,SACRC,QAAU,gBACVC,YAAc,IACdC,MAAQ,OACRC,OAAS,kBCvEnBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c250287f.chunk.js","sourcesContent":["import React from 'react'\r\nimport 'codemirror/lib/codemirror.css'\r\nimport 'codemirror/theme/material.css'\r\nimport 'codemirror/mode/xml/xml'\r\nimport 'codemirror/mode/css/css'\r\nimport 'codemirror/mode/javascript/javascript'\r\nimport {  Controlled as ControlledEditor} from 'react-codemirror2'\r\n\r\n\r\nexport default function Editor(props) {\r\n    const {\r\n        displayName,\r\n        value,\r\n        language,\r\n        onChange\r\n    } = props\r\n    function handleChange(editor,data,value){\r\n        onChange(value)\r\n    }\r\n    return (\r\n        <div className = \"editor-container\">\r\n            <div className = \"editor-title\">\r\n                {displayName}\r\n                \r\n            </div>\r\n            <ControlledEditor \r\n                onBeforeChange = {handleChange}\r\n                value = {value}\r\n                className = \"code-mirror-wrapper\"\r\n                options = {{\r\n                    lineWrapping: true,\r\n                    lint: true,\r\n                    mode: language,\r\n                    theme: 'material',\r\n                    lineNumbers: true\r\n                }}\r\n            />\r\n            \r\n        </div>\r\n        \r\n    )\r\n}\r\n ","import {useEffect,useState} from 'react'\r\n\r\nconst PREFIX = 'code-editor-'\r\nexport default function useLocalStorage(key,initialValue) {\r\n    const preFixedKey = PREFIX + key\r\n    const [value,setValue ] = useState(() => {\r\n        const jsonValue = localStorage.getItem(preFixedKey)\r\n        if(jsonValue != null) return JSON.parse(jsonValue)\r\n\r\n        if(typeof initialValue === 'function'){\r\n            return initialValue()\r\n        }else {\r\n            return initialValue\r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(preFixedKey,JSON.stringify(value))\r\n    },[preFixedKey,value])\r\n    return [value,setValue]\r\n}\r\n","import React,{ useState,useEffect } from  'react';\nimport Editor from './Editor';\nimport localStorage from '../hooks/useLocalStorage';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport 'react-tabs/style/react-tabs.css';\n\nfunction App() {\n  const [html,setHtml] = localStorage('html','')\n  const [css,setCss] = localStorage('css','')\n  const [js,setJs] = localStorage('js','')\n  const [srcDoc,setSrcDoc] =  useState('')\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setSrcDoc(`\n      <html>\n        <body>${html}</body>\n        <style>${css}</style>\n        <script>${js}</script>\n      </html>\n      `)\n    },300)\n    return () => clearTimeout(timeout)\n  },[html,css,js])\n  \n  \n    \n\n  \n  return (\n  <><div className = \"horizontal\">\n      <div className = \"pane1 top-pane\">\n        \n        \n      <Tabs>\n      <TabList>\n        <Tab>Index.html</Tab>\n        <Tab>Index.css</Tab>\n        <Tab>Index.js</Tab>\n      </TabList>\n  \n      <TabPanel>\n      <Editor \n          language = \"xml\" \n          displayName = \"HTML\" \n          value = {html} \n          onChange = {setHtml}\n        />\n      </TabPanel>\n      <TabPanel>\n      <Editor \n          language = \"css\" \n          displayName = \"CSS\" \n          value = {css} \n          onChange = {setCss}\n        />\n      </TabPanel>\n      <TabPanel>\n      <Editor \n          language = \"javascript\" \n          displayName = \"JS\" \n          value = {js} \n          onChange = {setJs}\n        />\n      </TabPanel>\n    </Tabs>\n        \n        \n      </div>\n      \n      <div className = \"pane2\">\n        <h1>Live server</h1>\n        <iframe\n          srcDoc = {srcDoc}\n          title = \"output\"\n          sandbox = \"allow-scripts\"\n          frameBorder = \"0\"\n          width = \"100%\"\n          height = \"100%\"\n        />\n      </div>\n      </div>\n    </>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}